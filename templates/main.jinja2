from __future__ import annotations
from fastapi import FastAPI
{{imports}}
from infra.database import SessionLocal
from infra.repository import *
from usecase import *
from interface.handler import *

app = FastAPI(
    {% if info %}
    {% for key,value in info.items() %}
        {% set info_value= value.__repr__() %}
        {{ key }} = {{info_value}},
    {% endfor %}
    {% endif %}
)

db = SessionLocal()
{# handlerが増えた場合、以下は手動で追記すること #}
# repository
userRepository = UserRepository(db)
affiliateRepository = AffiliateRepository(db)
# service
# usecase
userUsecase = UserUsecase(userRepository, affiliateRepository)
affiliateUsecase = AffiliateUsecase(affiliateRepository)
# handler
userHandler = UserHandler(userUsecase)
affiliateHandler = AffiliateHandler(affiliateUsecase)

{# router分割とカスタムテンプレートが併用できないのでmain.pyに平置き #}
{% for operation in operations %}
@app.{{operation.type}}('{{operation.snake_case_path}}', response_model={{operation.response}}
    {% if operation.additional_responses %}
        , responses={
            {% for status_code, models in operation.additional_responses.items() %}
                '{{ status_code }}': {
                {% for key, model in models.items() %}
                    '{{ key }}': {{ model }}{% if not loop.last %},{% endif %}
                {% endfor %}
                }{% if not loop.last %},{% endif %}
            {% endfor %}
        }
    {% endif %}
    {% if operation.tags %}
    , tags={{operation.tags}}
    {% endif %}
)
async def {{operation.function_name}}(
    {{operation.snake_case_arguments}}
    ) -> {{operation.return_type}}:
    {%- if operation.summary %}
    """
    {{ operation.summary }}
    """
    {%- endif %}
    return {{ operation.tags[0] | lower }}Handler.{{operation.function_name}}(
        {% for arg in operation.snake_case_arguments.split(',') %}
            {% if ':' in arg %}
            {{ arg.split(':')[0] }}={{ arg.split(':')[0] }},
            {% endif %}
        {% endfor %}
    )
{% endfor %}