openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"
tags:
  - name: User
  - name: Affiliate
  - name: Item
  - name: Order
servers:
  - url: http://localhost:8000
paths:
  /users:
    get:
      tags:
        - User
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/CreateUserRequest"
      responses:
        "200":
          description: Success
  /users/{user_id}:
    get:
      tags:
        - User
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/User"
    put:
      tags:
        - User
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/UpdateUserRequest"
      responses:
        "200":
          description: Success
    delete:
      tags:
        - User
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
  /affiliates:
    get:
      tags:
        - Affiliate
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Affiliate"
    post:
      tags:
        - Affiliate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/CreateAffiliateRequest"
      responses:
        "200":
          description: Success
  /affiliates/{affiliate_id}:
    get:
      tags:
        - Affiliate
      parameters:
        - in: path
          name: affiliate_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Affiliate"
    put:
      tags:
        - Affiliate
      parameters:
        - in: path
          name: affiliate_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/UpdateAffiliateRequest"
      responses:
        "200":
          description: Success
    delete:
      tags:
        - Affiliate
      parameters:
        - in: path
          name: affiliate_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
  /items:
    get:
      tags:
        - Item
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"
    post:
      tags:
        - Item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/CreateItemRequest"
      responses:
        "200":
          description: Success
  /items/{item_id}:
    get:
      tags:
        - Item
      parameters:
        - in: path
          name: item_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Item"
    put:
      tags:
        - Item
      parameters:
        - in: path
          name: item_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/UpdateItemRequest"
      responses:
        "200":
          description: Success
    delete:
      tags:
        - Item
      parameters:
        - in: path
          name: item_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
  /orders:
    get:
      tags:
        - Order
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
    post:
      tags:
        - Order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/CreateOrderRequest"
      responses:
        "200":
          description: Success
  /orders/{order_id}:
    get:
      tags:
        - Order
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/Order"
    put:
      tags:
        - Order
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/UpdateOrderRequest"
      responses:
        "200":
          description: Success
    delete:
      tags:
        - Order
      parameters:
        - in: path
          name: order_id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success

components:
  schemas:
    BaseUser:
      type: object
      description: 担当者(Base)
      properties:
        id:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          description: ユーザID
      required:
        - id
    User:
      type: object
      description: 担当者
      x-tablename: users
      properties:
        id:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          description: ユーザID
          x-primary-key: true
        first_name:
          type: string
          minLength: 1
          maxLength: 255
          description: 名
          example: 太郎
        last_name:
          type: string
          minLength: 1
          maxLength: 255
          description: 姓
          example: 山田
        tel:
          type: string
          minLength: 13
          maxLength: 13
          description: 電話番号
          example: 000-0000-0000
        email:
          type: string
          minLength: 3
          maxLength: 255
          description: メールアドレス
          example: sample@sample.com
        created_at:
          type: string
          format: date-time
          x-server-default: Now()
          description: 作成日
        updated_at:
          type: string
          format: date-time
          x-server-default: Now()
          description: 更新日
        affiliate:
          allOf:
            - "$ref": "#/components/schemas/Affiliate"
            - x-backref: users
        orders:
          readOnly: True
          type: array
          items:
            $ref: "#/components/schemas/BaseOrder"
      required:
        - id
        - first_name
        - last_name
        - tel
        - created_at
        - updated_at
    Affiliate:
      type: object
      description: 加盟組織
      x-tablename: affiliates
      properties:
        id:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          description: 加盟組織ID
          x-primary-key: true
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: 組織名
          example: 株式会社サンプル
        postcode:
          type: string
          minLength: 8
          maxLength: 8
          description: 郵便番号
          example: 000-0000
        address:
          type: string
          minLength: 1
          maxLength: 255
          description: 住所
          example: 静岡県沼津市上土町36
        tel:
          type: string
          minLength: 13
          maxLength: 13
          description: 電話番号
          example: 000-0000-0000
        fax:
          type: string
          minLength: 13
          maxLength: 13
          description: FAX番号
          example: 000-0000-0000
        email:
          type: string
          minLength: 3
          maxLength: 255
          description: メールアドレス
          example: sample@sample.com
        created_at:
          type: string
          format: date-time
          x-server-default: Now()
          description: 作成日
        updated_at:
          type: string
          format: date-time
          x-server-default: Now()
          description: 更新日
        users:
          readOnly: True
          type: array
          items:
            $ref: "#/components/schemas/BaseUser"
        orders:
          readOnly: True
          type: array
          items:
            $ref: "#/components/schemas/BaseOrder"
      required:
        - id
        - name
        - postcode
        - address
        - tel
        - created_at
        - updated_at
    Item:
      type: object
      description: 商品
      x-tablename: items
      properties:
        id:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          description: 商品ID
          x-primary-key: true
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: 商品名
          example: ○○商店缶バッジ
        description:
          type: string
          minLength: 0
          maxLength: 255
          description: 商品説明
          example: ○○商店の缶バッジです！！
        img_src:
          type: string
          minLength: 1
          maxLength: 255
          example: http://localhost:8000/static/no-image.png
        category:
          type: integer
          description: カテゴリ(0:缶バッジ, -1:その他)
          minimum: -1
          example: 0
        type:
          type: integer
          description: タイプ(0:通常, 1:限定, -1:その他)
          minimum: -1
          example: 0
        unit_price:
          type: integer
          description: 単価
          minimum: 0
          example: 300
        sales_start:
          type: string
          format: date-time
          description: 作成日
        sales_end:
          type: string
          format: date-time
          description: 作成日
        created_at:
          type: string
          format: date-time
          x-server-default: Now()
          description: 作成日
        updated_at:
          type: string
          format: date-time
          x-server-default: Now()
          description: 更新日
      required:
        - id
        - name
        - category
        - type
        - unit_price
        - created_at
        - updated_at
    BaseOrder:
      type: object
      description: 注文(Base)
      properties:
        id:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          description: 注文ID
      required:
        - id
    Order:
      type: object
      description: 注文
      x-tablename: orders
      properties:
        id:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          description: 注文ID
          x-primary-key: true
        postcode:
          type: string
          minLength: 8
          maxLength: 8
          description: 届け先郵便番号
          example: 000-0000
        address:
          type: string
          minLength: 1
          maxLength: 255
          description: 届け先住所
          example: 静岡県沼津市上土町36
        approved_flag:
          type: boolean
          description: 承認フラグ
          default: false
          example: false
        # ordered_datetime:
        #   type: string
        #   format: date-time
        #   description: 注文日時
        # approved_datetime:
        #   type: string
        #   format: date-time
        #   description: 承認日時
        affiliate:
          allOf:
            - "$ref": "#/components/schemas/Affiliate"
            - x-backref: orders
        user:
          allOf:
            - "$ref": "#/components/schemas/User"
            - x-backref: orders
      required:
        - id
        - postcode
        - address
        - approved_flag
        - affiliate
        - user
    CreateUserRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 255
          description: 名
          example: 太郎
        last_name:
          type: string
          minLength: 1
          maxLength: 255
          description: 姓
          example: 山田
        tel:
          type: string
          minLength: 13
          maxLength: 13
          description: 電話番号
          example: 000-0000-0000
        email:
          type: string
          minLength: 3
          maxLength: 255
          description: メールアドレス
          example: sample@sample.com
        affiliate_id:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          description: 加盟組織ID
      required:
        - first_name
        - last_name
    UpdateUserRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 255
          description: 名
          example: 太郎
        last_name:
          type: string
          minLength: 1
          maxLength: 255
          description: 姓
          example: 山田
        tel:
          type: string
          minLength: 13
          maxLength: 13
          description: 電話番号
          example: 000-0000-0000
        email:
          type: string
          minLength: 3
          maxLength: 255
          description: メールアドレス
          example: sample@sample.com
    CreateAffiliateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: 組織名
          example: 株式会社サンプル
        postcode:
          type: string
          minLength: 8
          maxLength: 8
          description: 郵便番号
          example: 000-0000
        address:
          type: string
          minLength: 1
          maxLength: 255
          description: 住所
          example: 静岡県沼津市上土町36
        tel:
          type: string
          minLength: 13
          maxLength: 13
          description: 電話番号
          example: 000-0000-0000
        fax:
          type: string
          minLength: 13
          maxLength: 13
          description: FAX番号
          example: 000-0000-0000
        email:
          type: string
          minLength: 3
          maxLength: 255
          description: メールアドレス
          example: sample@sample.com
      required:
        - name
        - postcode
        - address
        - tel
    UpdateAffiliateRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: 組織名
          example: 株式会社サンプル
        postcode:
          type: string
          minLength: 8
          maxLength: 8
          description: 郵便番号
          example: 000-0000
        address:
          type: string
          minLength: 1
          maxLength: 255
          description: 住所
          example: 静岡県沼津市上土町36
        tel:
          type: string
          minLength: 13
          maxLength: 13
          description: 電話番号
          example: 000-0000-0000
        fax:
          type: string
          minLength: 13
          maxLength: 13
          description: FAX番号
          example: 000-0000-0000
        email:
          type: string
          minLength: 3
          maxLength: 255
          description: メールアドレス
          example: sample@sample.com
    CreateItemRequest:
      type: object
      description: 商品
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: 商品名
          example: ○○商店缶バッジ
        description:
          type: string
          minLength: 0
          maxLength: 255
          description: 商品説明
          example: ○○商店の缶バッジです！！
        img_src:
          type: string
          minLength: 1
          maxLength: 255
          example: http://localhost:8000/static/no-image.png
        category:
          type: integer
          description: カテゴリ(0:缶バッジ, -1:その他)
          minimum: -1
          example: 0
        type:
          type: integer
          description: タイプ(0:通常, 1:限定, -1:その他)
          minimum: -1
          example: 0
        unit_price:
          type: integer
          description: 単価
          minimum: 0
          example: 300
        sales_start:
          type: string
          format: date-time
          description: 作成日
        sales_end:
          type: string
          format: date-time
          description: 作成日
      required:
        - name
        - unit_price
    UpdateItemRequest:
      type: object
      description: 商品
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          description: 商品名
          example: ○○商店缶バッジ
        description:
          type: string
          minLength: 0
          maxLength: 255
          description: 商品説明
          example: ○○商店の缶バッジです！！
        img_src:
          type: string
          minLength: 1
          maxLength: 255
          example: http://localhost:8000/static/no-image.png
        category:
          type: integer
          description: カテゴリ(0:缶バッジ, -1:その他)
          minimum: -1
          example: 0
        unit_price:
          type: integer
          description: 単価
          minimum: 0
          example: 300
        sales_start:
          type: string
          format: date-time
          description: 作成日
        sales_end:
          type: string
          format: date-time
          description: 作成日
    CreateOrderRequest:
      type: object
      description: 注文
      properties:
        postcode:
          type: string
          minLength: 8
          maxLength: 8
          description: 届け先郵便番号
          example: 000-0000
        address:
          type: string
          minLength: 1
          maxLength: 255
          description: 届け先住所
          example: 静岡県沼津市上土町36
        approved_flag:
          type: boolean
          description: 承認フラグ
          default: false
          example: false
        # ordered_datetime:
        #   type: string
        #   format: date-time
        #   description: 注文日時
        # approved_datetime:
        #   type: string
        #   format: date-time
        #   description: 承認日時
        affiliate_id:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          description: 加盟組織ID
        user_id:
          type: string
          minLength: 36
          maxLength: 36
          format: uuid
          description: ユーザID
      required:
        - postcode
        - address
        - affiliate_id
        - user_id
    UpdateOrderRequest:
      type: object
      description: 注文
      properties:
        postcode:
          type: string
          minLength: 8
          maxLength: 8
          description: 届け先郵便番号
          example: 000-0000
        address:
          type: string
          minLength: 1
          maxLength: 255
          description: 届け先住所
          example: 静岡県沼津市上土町36
        approved_flag:
          type: boolean
          description: 承認フラグ
          default: false
          example: false
        # ordered_datetime:
        #   type: string
        #   format: date-time
        #   description: 注文日時
        # approved_datetime:
        #   type: string
        #   format: date-time
        #   description: 承認日時
